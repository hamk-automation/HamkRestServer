{"swagger":"2.0","info":{"description":"This is Document of HAMK API server based on loopback v3.x REST API server swagger file.\nYou can find out more about Loopback at [https://loopback.io/](https://loopback.io/) for version info [https://loopback.io/doc/en/lb3/, #loopback](https://loopback.io/doc/en/lb3/).
    \n# Introduction\n
    This is HAMK API server Documentation. You can [Sing Up](https://iot.research.hamk.fi/explorer/login) to use API provided by [Energiatehokkuus](http://www.hamk.fi/tyoelamalle/hankkeet/energiatehokkuus/Sivut/default.aspx) team.
    \n# Authentication\n
    Autehtication method
    \n  - Acess Token\n\n
    Requested by Login to API Explorer [Login](https://iot.research.hamk.fi/explorer/#!/user/user_login) Or [Sing In](https://iot.research.hamk.fi/explorer/login).
  ","version":"1.0.0","title":"HAMK API","contact":{"email":"atte.partanen@hamk.fi"}, "x-logo":{"url": "/explorer/docs/hamk.jpg","backgroundColor":"#808080"}},"x-tagGroups": [
    {
      "name": "General",
      "tags": [
        "building",
        "location",
        "system",
        "sensor"
      ]
    },
    {
      "name": "User Management",
      "tags": [
        "user"
      ]
    }
  ],"basePath":"/explorer/api/v1","paths":{"/sensors":{"post":{"tags":["sensor"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"sensor.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/$new_sensor"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/sensor"}}},"deprecated":false},"patch":{"tags":["sensor"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"sensor.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/sensor"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/sensor"}}},"deprecated":false},"get":{"tags":["sensor"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"sensor.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/sensor"}}}},"deprecated":false}},"/sensors/{id}":{"get":{"tags":["sensor"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"sensor.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/sensor"}}},"deprecated":false},"delete":{"tags":["sensor"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"sensor.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/sensors/count":{"get":{"tags":["sensor"],"summary":"Count instances of the model matched by where from the data source.","operationId":"sensor.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/sensors/{id}/history":{"get":{"tags":["sensor"],"summary":"Get history data with sensor {{id}}.","operationId":"sensor.history","parameters":[{"name":"id","in":"path","required":true,"type":"number","format":"double"},{"name":"startTime","in":"query","required":true,"type":"string"},{"name":"endTime","in":"query","required":false,"type":"string"},{"name":"interval","in":"query","required":false,"type":"number","format":"double"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"result":{"type":"object"}}}}},"deprecated":false}},"/sensors/{id}/point":{"post":{"tags":["sensor"],"summary":"Post sensor data with sensor {{id}}.","operationId":"sensor.point","parameters":[{"name":"id","in":"path","description":"Sensors {{id}} to write data","required":true,"type":"number","format":"double"},{"name":"data","in":"body","description":"Measurement value","required":true,"schema":{"$ref":"#/definitions/sensor"}}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/buildings":{"post":{"tags":["building"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"building.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/$new_building"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/building"}}},"deprecated":false},"patch":{"tags":["building"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"building.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/building"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/building"}}},"deprecated":false},"get":{"tags":["building"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"building.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/building"}}}},"deprecated":false}},"/buildings/{id}":{"get":{"tags":["building"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"building.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/building"}}},"deprecated":false},"delete":{"tags":["building"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"building.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/buildings/count":{"get":{"tags":["building"],"summary":"Count instances of the model matched by where from the data source.","operationId":"building.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/locations":{"post":{"tags":["location"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"location.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/$new_location"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false},"patch":{"tags":["location"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"location.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/location"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false},"get":{"tags":["location"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"location.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/location"}}}},"deprecated":false}},"/locations/{id}":{"get":{"tags":["location"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"location.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/location"}}},"deprecated":false},"delete":{"tags":["location"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"location.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/locations/count":{"get":{"tags":["location"],"summary":"Count instances of the model matched by where from the data source.","operationId":"location.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/systems":{"post":{"tags":["system"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"system.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/$new_system"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/system"}}},"deprecated":false},"patch":{"tags":["system"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"system.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/system"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/system"}}},"deprecated":false},"get":{"tags":["system"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"system.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/system"}}}},"deprecated":false}},"/systems/{id}":{"get":{"tags":["system"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"system.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/system"}}},"deprecated":false},"delete":{"tags":["system"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"system.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/systems/count":{"get":{"tags":["system"],"summary":"Count instances of the model matched by where from the data source.","operationId":"system.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/users/{id}/sensors/{fk}":{"get":{"tags":["user"],"summary":"Find a related item by id for sensors.","operationId":"user.prototype.__findById__sensors","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for sensors","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/sensor"}}},"deprecated":false},"delete":{"tags":["user"],"summary":"Delete a related item by id for sensors.","operationId":"user.prototype.__destroyById__sensors","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for sensors","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["user"],"summary":"Update a related item by id for sensors.","operationId":"user.prototype.__updateById__sensors","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for sensors","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/sensor"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/sensor"}}},"deprecated":false}},"/users/{id}/buildings":{"get":{"tags":["user"],"summary":"Queries buildings of user.","operationId":"user.prototype.__get__buildings","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/building"}}}},"deprecated":false}},"/users/{id}/sensors":{"get":{"tags":["user"],"summary":"Queries sensors of user.","operationId":"user.prototype.__get__sensors","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/sensor"}}}},"deprecated":false},"post":{"tags":["user"],"summary":"Creates a new instance in sensors of this model.","operationId":"user.prototype.__create__sensors","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/$new_sensor"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/sensor"}}},"deprecated":false},"delete":{"tags":["user"],"summary":"Deletes all sensors of this model.","operationId":"user.prototype.__delete__sensors","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/users/{id}/sensors/count":{"get":{"tags":["user"],"summary":"Counts sensors of user.","operationId":"user.prototype.__count__sensors","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/users/{id}/accessTokens":{"get":{"tags":["user"],"summary":"Queries accessTokens of user.","operationId":"user.prototype.__get__accessTokens","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/AccessToken"}}}},"deprecated":false},"post":{"tags":["user"],"summary":"Creates a new instance in accessTokens of this model.","operationId":"user.prototype.__create__accessTokens","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["user"],"summary":"Deletes all accessTokens of this model.","operationId":"user.prototype.__delete__accessTokens","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/users/{id}/accessTokens/count":{"get":{"tags":["user"],"summary":"Counts accessTokens of user.","operationId":"user.prototype.__count__accessTokens","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/users":{"post":{"tags":["user"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"user.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/$new_user"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false},"patch":{"tags":["user"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"user.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/user"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false},"get":{"tags":["user"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"user.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/user"}}}},"deprecated":false}},"/users/{id}":{"get":{"tags":["user"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"user.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/user"}}},"deprecated":false},"delete":{"tags":["user"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"user.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/users/count":{"get":{"tags":["user"],"summary":"Count instances of the model matched by where from the data source.","operationId":"user.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/users/login":{"post":{"tags":["user"],"summary":"Login a user with username/email and password.","operationId":"user.login","parameters":[{"name":"credentials","in":"body","required":true,"schema":{"type":"object"}},{"name":"include","in":"query","description":"Related objects to include in the response. See the description of return value for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The response body contains properties of the AccessToken created on login.\nDepending on the value of `include` parameter, the body may contain additional properties:\n\n  - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n\n","type":"object"}}},"deprecated":false}},"/users/logout":{"post":{"tags":["user"],"summary":"Logout a user with access token.","operationId":"user.logout","parameters":[],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/users/{id}/verify":{"post":{"tags":["user"],"summary":"Trigger user's identity verification with configured verifyOptions","operationId":"user.prototype.verify","parameters":[{"name":"id","in":"path","description":"user id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/users/confirm":{"get":{"tags":["user"],"summary":"Confirm a user registration with identity verification token.","operationId":"user.confirm","parameters":[{"name":"uid","in":"query","required":true,"type":"string"},{"name":"token","in":"query","required":true,"type":"string"},{"name":"redirect","in":"query","required":false,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/users/reset":{"post":{"tags":["user"],"summary":"Reset password for a user with email.","operationId":"user.resetPassword","parameters":[{"name":"options","in":"body","required":true,"schema":{"type":"object"}}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/users/change-password":{"post":{"tags":["user"],"summary":"Change a user's password.","operationId":"user.changePassword","parameters":[{"name":"oldPassword","in":"formData","required":true,"type":"string"},{"name":"newPassword","in":"formData","required":true,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/users/reset-password":{"post":{"tags":["user"],"summary":"Reset user's password via a password-reset token.","operationId":"user.setPassword","parameters":[{"name":"newPassword","in":"formData","required":true,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}}},"tags":[{"name":"sensor"},{"name":"building"},{"name":"location"},{"name":"system"},{"name":"user"}],"consumes":["application/json","application/x-www-form-urlencoded","application/xml","text/xml"],"produces":["application/json","application/xml","text/xml","application/javascript","text/javascript"],"definitions":{"$new_sensor":{"properties":{"tag":{"type":"string"},"type":{"type":"string"},"unit":{"type":"string"},"description":{"type":"string"},"locationId":{"type":"number","format":"double"},"systemId":{"type":"number","format":"double"},"userId":{"type":"number","format":"double"}},"required":["tag","type"],"additionalProperties":false},"sensor":{"properties":{"tag":{"type":"string"},"type":{"type":"string"},"unit":{"type":"string"},"description":{"type":"string"},"id":{"type":"number","format":"double"},"locationId":{"type":"number","format":"double"},"systemId":{"type":"number","format":"double"},"userId":{"type":"number","format":"double"}},"required":["tag","type"],"additionalProperties":false},"x-any":{"properties":{}},"$new_building":{"properties":{"name":{"type":"string"},"description":{"type":"string"},"userId":{"type":"number","format":"double"}},"required":["name"],"additionalProperties":false},"building":{"properties":{"name":{"type":"string"},"description":{"type":"string"},"id":{"type":"number","format":"double"},"userId":{"type":"number","format":"double"}},"required":["name"],"additionalProperties":false},"$new_location":{"properties":{"name":{"type":"string"},"description":{"type":"string"},"buildingId":{"type":"number","format":"double"},"userId":{"type":"number","format":"double"}},"required":["name"],"additionalProperties":false},"location":{"properties":{"name":{"type":"string"},"description":{"type":"string"},"id":{"type":"number","format":"double"},"buildingId":{"type":"number","format":"double"},"userId":{"type":"number","format":"double"}},"required":["name"],"additionalProperties":false},"$new_system":{"properties":{"name":{"type":"string"},"description":{"type":"string"},"userId":{"type":"number","format":"double"}},"required":["name"],"additionalProperties":false},"system":{"properties":{"name":{"type":"string"},"description":{"type":"string"},"id":{"type":"number","format":"double"},"userId":{"type":"number","format":"double"}},"required":["name"],"additionalProperties":false},"AccessToken":{"properties":{"id":{"type":"string"},"ttl":{"default":1209600,"description":"time to live in seconds (2 weeks by default)","type":"number","format":"double"},"scopes":{"description":"Array of scopes granted to this access token.","type":"array","items":{"type":"string"}},"created":{"type":"string","format":"date-time"},"userId":{"type":"number","format":"double"}},"required":["id"],"additionalProperties":false},"$new_user":{"properties":{"role":{"type":"string"},"realm":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"emailVerified":{"type":"boolean"}},"required":["email"],"additionalProperties":false},"user":{"properties":{"role":{"type":"string"},"realm":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"emailVerified":{"type":"boolean"},"id":{"type":"number","format":"double"}},"required":["email"],"additionalProperties":false}}}
